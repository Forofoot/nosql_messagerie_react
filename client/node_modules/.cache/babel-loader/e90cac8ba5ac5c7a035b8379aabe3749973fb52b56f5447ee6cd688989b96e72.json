{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erwan\\\\nosql_mango\\\\client\\\\src\\\\containers\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState('');\n  const [message, setMessage] = useState('');\n  const slug = useParams();\n  async function getFromServer() {\n    const response = await fetch(`/api/room/${slug.id}`);\n    const data = await response.json();\n    setRoom(data);\n  }\n  async function getMessages() {\n    const response = await fetch(`/api/room/messages/${slug.id}`);\n    const data = await response.json();\n    setMessages(data);\n  }\n  async function postToServer(e) {\n    e.preventDefault();\n    const response = await fetch(`/api/message/${slug.id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  useEffect(() => {\n    setInterval(() => {\n      getMessages();\n    }, 1000);\n    getFromServer();\n    getMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: room === null || room === void 0 ? void 0 : room.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), messages && messages.map((message, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => postToServer(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        id: \"message\",\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Message\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"BAutkH374pcvX/JggAPbSDf8uAc=\", false, function () {\n  return [useParams];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Room","_s","room","setRoom","messages","setMessages","message","setMessage","slug","getFromServer","response","fetch","id","data","json","getMessages","postToServer","e","preventDefault","method","headers","body","JSON","stringify","console","log","setInterval","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","onChange","target","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/erwan/nosql_mango/client/src/containers/Room.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function Room() {\r\n    \r\n  const [room, setRoom] = useState('')\r\n  const [messages, setMessages] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const slug = useParams()\r\n  \r\n  async function getFromServer() {\r\n    const response = await fetch(`/api/room/${slug.id}`)\r\n    const data = await response.json()\r\n    setRoom(data)\r\n  }\r\n\r\n  async function getMessages() {\r\n    const response = await fetch(`/api/room/messages/${slug.id}`)\r\n    const data = await response.json()\r\n    setMessages(data)\r\n}\r\n\r\n\r\n  async function postToServer(e) {\r\n    e.preventDefault()\r\n    const response = await fetch(`/api/message/${slug.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({message: message})\r\n    })\r\n    const data = await response.json()\r\n    console.log(data)\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n        getMessages()\r\n    }, 1000)\r\n    getFromServer()\r\n    getMessages()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n        <h1>{room?.name}</h1>\r\n\r\n        {messages && messages.map((message, index) => {\r\n            return <p key={index}>{message.message}</p>\r\n        })}\r\n\r\n        <form onSubmit={(e) => postToServer(e)}>\r\n            <input type=\"text\" name=\"message\" id=\"message\" onChange={(e) => setMessage(e.target.value)} placeholder='Message' value={message}/>\r\n\r\n            <button type=\"submit\">Envoyer</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}