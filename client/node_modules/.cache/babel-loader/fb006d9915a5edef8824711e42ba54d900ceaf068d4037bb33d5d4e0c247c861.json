{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erwan\\\\nosql_mango\\\\client\\\\src\\\\containers\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room() {\n  _s();\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const slug = useParams();\n  async function getFromServer() {\n    const response = await fetch(`/api/room/${slug.id}`);\n    const data = await response.json();\n    setRoom(data);\n  }\n  async function postToServer() {\n    const response = await fetch(`/api/m/${slug.id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  useEffect(() => {\n    getFromServer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: room === null || room === void 0 ? void 0 : room.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => postToServer(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        id: \"message\",\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Message\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"tukxj0dXFY4k1SQmKP4a3q1njkI=\", false, function () {\n  return [useParams];\n});\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Room","_s","room","setRoom","message","setMessage","slug","getFromServer","response","fetch","id","data","json","postToServer","method","headers","body","JSON","stringify","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","type","onChange","target","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/erwan/nosql_mango/client/src/containers/Room.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function Room() {\r\n    \r\n  const [room, setRoom] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const slug = useParams()\r\n  \r\n  async function getFromServer() {\r\n    const response = await fetch(`/api/room/${slug.id}`)\r\n    const data = await response.json()\r\n    setRoom(data)\r\n  }\r\n\r\n  async function postToServer() {\r\n    const response = await fetch(`/api/m/${slug.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({message: message})\r\n    })\r\n    const data = await response.json()\r\n    console.log(data)\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    getFromServer()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n        <h1>{room?.name}</h1>\r\n\r\n        <form onSubmit={(e) => postToServer(e)}>\r\n            <input type=\"text\" name=\"message\" id=\"message\" onChange={(e) => setMessage(e.target.value)} placeholder='Message' value={message}/>\r\n\r\n            <button type=\"submit\">Envoyer</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,IAAI,GAAGT,SAAS,CAAC,CAAC;EAExB,eAAeU,aAAaA,CAAA,EAAG;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYH,IAAI,CAACI,EAAG,EAAC,CAAC;IACpD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCT,OAAO,CAACQ,IAAI,CAAC;EACf;EAEA,eAAeE,YAAYA,CAAA,EAAG;IAC5B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASH,IAAI,CAACI,EAAG,EAAC,EAAE;MAC9CI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,OAAO,EAAEA;MAAO,CAAC;IAC3C,CAAC,CAAC;IACF,MAAMO,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCO,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACrB;EAGEhB,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAKnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAErB3B,OAAA;MAAM4B,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAAE;MAAAP,QAAA,gBACnCtB,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACP,IAAI,EAAC,SAAS;QAACZ,EAAE,EAAC,SAAS;QAACoB,QAAQ,EAAGF,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACG,MAAM,CAACC,KAAK,CAAE;QAACC,WAAW,EAAC,SAAS;QAACD,KAAK,EAAE5B;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEnI3B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACzB,EAAA,CAxCuBD,IAAI;EAAA,QAIbH,SAAS;AAAA;AAAAqC,EAAA,GAJAlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}